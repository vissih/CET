//@version=5
indicator("Free Candle Detection with Stats", overlay=true)

// Input parameters
percentLevel = input.float(50.0, title="Percentage Level for Line", minval=0.0, maxval=100.0) / 100.0

// Get the body of the current candle A (index 1)
openA = open[1]
closeA = close[1]

// Get the body of Candle X (left candle) and Candle B (right candle)
openX = open[2]
closeX = close[2]
openB = open
closeB = close

// Determine the body range of Candle A (find min and max of open/close)
bodyHighA = math.max(openA, closeA)
bodyLowA = math.min(openA, closeA)

// Check if the body of Candle X is inside the body of Candle A
insideBarX = (math.max(openX, closeX) <= bodyHighA and math.min(openX, closeX) >= bodyLowA)

// Check if the body of Candle B is inside the body of Candle A
insideBarB = (math.max(openB, closeB) <= bodyHighA and math.min(openB, closeB) >= bodyLowA)

// If both conditions are true, mark it as an extended inside bar
extendedInsideBar = insideBarX and insideBarB

// Variables to store contraction range (high and low)
var float contractionHigh = na
var float contractionLow = na
var int candleCounter = na  // Counter to track candles since last contraction
if extendedInsideBar
    contractionHigh := bodyHighA
    contractionLow := bodyLowA
    candleCounter := 0  // Reset counter when a new contraction range is formed
else if not na(contractionHigh) and not na(contractionLow)
    candleCounter := nz(candleCounter) + 1  // Increment counter for every subsequent candle

// Identify if the current candle is a free candle (outside the contraction range)
var bool firstFreeDetected = false
freeCandle = not na(contractionHigh) and not na(contractionLow) and ((low > contractionHigh) or (high < contractionLow))

// Label and mark the first free candle
if freeCandle and not firstFreeDetected
    label.new(x=bar_index, y=high, text=str.tostring(candleCounter) + "\nTF: " + timeframe.period, color=color.new(color.purple, 90), style=label.style_circle, textcolor=color.rgb(0, 0, 0))
    firstFreeDetected := true

// Reset firstFreeDetected after extended inside bar is formed again
if extendedInsideBar
    firstFreeDetected := false

// Color Candle X, Candle A, and Candle B individually
barcolor(extendedInsideBar and insideBarX ? color.red : na, offset=-2)  // Color Candle X
barcolor(extendedInsideBar ? color.orange : na, offset=-1)  // Color Candle A
barcolor(extendedInsideBar and insideBarB ? color.green : na)  // Color Candle B

// Color the free candle purple
barcolor(freeCandle ? color.purple : na)
